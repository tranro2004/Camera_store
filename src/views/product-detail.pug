extends layout

block content
  link(rel='stylesheet', href='/css/product-detail.css')
  .product-detail
    h1.text-center= product.name
    img.product-image(src=`${product.image_url}` alt=product.name)
    p.text-muted.mb-3 Gi√°: <strong class="text-primary">#{product.price} ƒë</strong>
    p.text-muted.mb-3 S·ªë l∆∞·ª£ng t·ªìn kho: <strong>#{product.quantity}</strong>
    p.text-muted.mb-4 M√¥ t·∫£: #{product.description}

    form#cart-form(method='POST', class='d-flex flex-column')
      input(type='hidden', name='productId', value=product.product_id)
      label(for='quantity', class='mb-2') S·ªë l∆∞·ª£ng:
      input(type='number', name='quantity', min='1', max=product.quantity, value='1', class='form-control mb-3')

      button(type='submit', class='btn btn-primary btn-lg') Th√™m v√†o gi·ªè h√†ng

  // Th√¥ng b√°o th√†nh c√¥ng
  #notification(style='display: none; color: green; margin-top: 10px;') S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c th√™m v√†o gi·ªè h√†ng!

  script.
    document.getElementById('cart-form').addEventListener('submit', async (e) => {
      e.preventDefault(); // NgƒÉn form submit m·∫∑c ƒë·ªãnh

      const formData = new FormData(e.target);
      const productId = formData.get('productId');
      const quantity = formData.get('quantity');

      try {
        // B∆∞·ªõc 1: Ki·ªÉm tra ho·∫∑c t·∫°o gi·ªè h√†ng
        let cartId;
        const createCartResponse = await fetch('/api/cart/create', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          credentials: 'include', // G·ª≠i cookie accessToken
        });
        const createCartResult = await createCartResponse.json();

        if (createCartResponse.ok) {
          cartId = createCartResult.cartId;
        } else {
          throw new Error(createCartResult.message || 'L·ªói khi t·∫°o gi·ªè h√†ng');
        }

        // B∆∞·ªõc 2: Th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
        const addItemResponse = await fetch('/api/cart/add-item', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          credentials: 'include', // G·ª≠i cookie accessToken
          body: JSON.stringify({ cartId, productId, quantity }),
        });
        const addItemResult = await addItemResponse.json();

        if (addItemResponse.ok) {
          // Hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
          const notification = document.getElementById('notification');
          notification.style.display = 'block';

          // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m tr√™n navbar
          const cartLink = document.querySelector('a[href="/api/cart"]');
          const currentCount = parseInt(cartLink.textContent.match(/\d+/)[0] || 0);
          cartLink.textContent = `üõí (${currentCount + parseInt(quantity)})`; // C·ªông th√™m quantity

          setTimeout(() => {
            notification.style.display = 'none';
            window.location.href = '/api/cart'; // Chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang gi·ªè h√†ng
          }, 3000); // ·∫®n th√¥ng b√°o v√† chuy·ªÉn h∆∞·ªõng sau 3 gi√¢y
        } else {
          throw new Error(addItemResult.message || 'L·ªói khi th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng');
        }
      } catch (error) {
        console.error('Error:', error);
        alert(error.message || 'ƒê√£ c√≥ l·ªói x·∫£y ra');
      }
    });

  // Styling for a more polished design
  style.
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Arial', sans-serif;
      background-color: #f7f7f7;
      padding: 30px;
    }

    .container {
      display: flex;
      justify-content: center;
      margin-top: 20px;
    }

    .product-detail {
      max-width: 800px;
      margin: 0 auto;
      padding: 20px;
      border: 1px solid #ddd;
      border-radius: 8px;
      background-color: #fff;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .product-detail h1 {
      font-size: 2rem;
      margin-bottom: 20px;
      color: #333;
    }

    .product-image {
      width: 100%;
      height: auto;
      border-radius: 8px;
      margin-bottom: 20px;
    }

    .product-detail p {
      font-size: 1rem;
      color: #666;
      margin-bottom: 10px;
    }

    .product-detail form {
      display: flex;
      flex-direction: column;
    }

    .product-detail label {
      font-size: 16px;
      margin-bottom: 5px;
      color: #444;
    }

    .form-control {
      padding: 8px 12px;
      font-size: 16px;
      border-radius: 4px;
      border: 1px solid #ccc;
      margin-bottom: 15px;
      width: 100%;
    }

    .form-control:focus {
      border-color: #007bff;
      outline: none;
      box-shadow: 0 0 5px rgba(0, 123, 255, 0.2);
    }

    .btn-primary {
      background-color: #007bff;
      border: none;
      padding: 12px 20px;
      font-size: 16px;
      color: white;
      border-radius: 4px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .btn-primary:hover {
      background-color: #0056b3;
    }

    #notification {
      font-size: 16px;
      padding: 12px;
      border: 1px solid #28a745;
      border-radius: 4px;
      background-color: #d4edda;
      margin-top: 20px;
    }

    /* Mobile responsiveness */
    @media (max-width: 767px) {
      .product-detail {
        padding: 15px;
      }

      .product-detail h1 {
        font-size: 1.5rem;
      }

      .form-control {
        font-size: 14px;
        padding: 6px 10px;
      }

      .btn-primary {
        font-size: 14px;
        padding: 10px 18px;
      }
    }
