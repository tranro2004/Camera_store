extends layout

block content
  link(rel='stylesheet', href='/css/cart.css')

  h1 Gi·ªè h√†ng c·ªßa b·∫°n
  #cart-items
    if cartItems && cartItems.length
      table.table
        thead
          tr
            th T√™n s·∫£n ph·∫©m
            th Gi√°
            th S·ªë l∆∞·ª£ng
            th T·ªïng
            th H√†nh ƒë·ªông
        tbody
          each item in cartItems
            tr(data-price=item.price data-cart-item-id=item.cartItemId)
              td= item.productName
              td= item.price.toLocaleString('vi-VN') + ' ƒë'
              td
                button(data-id=item.cartItemId, onclick='updateQuantity(this, "decrease")') -
                span(style='margin: 0 10px;')= item.quantity
                button(data-id=item.cartItemId, onclick='updateQuantity(this, "increase")') +
              td= item.total.toLocaleString('vi-VN') + ' ƒë'
              td
                button(data-id=item.cartItemId, onclick='removeCartItem(this)') X√≥a
      // N√∫t thanh to√°n
      div(style='margin-top: 20px;')
        button(onclick=`checkout('${cartId}')`) Thanh to√°n
    else
      p Gi·ªè h√†ng tr·ªëng

  script.
    function checkout(cartId) {
      window.location.href = `/api/orders/checkout?cartId=${cartId}`;
    }

    async function updateQuantity(button, action) {
      const cartItemId = button.getAttribute('data-id');
      const row = button.closest('tr');
      const quantitySpan = button.parentElement.querySelector('span');
      let currentQuantity = parseInt(quantitySpan.textContent);

      if (action === 'decrease' && currentQuantity <= 1) {
        return;
      }

      const newQuantity = action === 'increase' ? currentQuantity + 1 : currentQuantity - 1;

      try {
        const response = await fetch('/api/cart/update-quantity', {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          credentials: 'include',
          body: JSON.stringify({ cartItemId, quantity: newQuantity }),
        });
        const result = await response.json();

        if (response.ok) {
          quantitySpan.textContent = newQuantity;
          const price = parseFloat(row.getAttribute('data-price')); // L·∫•y gi√° t·ª´ data-price
          const totalCell = row.cells[3];
          totalCell.textContent = (price * newQuantity).toLocaleString('vi-VN') + ' ƒë';

          // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng tr√™n navbar
          const cartLink = document.querySelector('a[href="/cart"]');
          if (cartLink) {
            const currentCount = parseInt(cartLink.textContent.match(/\d+/)?.[0] || 0);
            cartLink.textContent = `üõí (${action === 'increase' ? currentCount + 1 : currentCount - 1})`;
          }
        } else {
          alert(result.message || 'L·ªói khi c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng');
        }
      } catch (error) {
        console.error('Error updating quantity:', error);
        alert('ƒê√£ c√≥ l·ªói x·∫£y ra: ' + error.message);
      }
    }

    async function removeCartItem(button) {
      const cartItemId = button.getAttribute('data-id');
      const row = button.closest('tr');
      try {
        const response = await fetch('/api/cart/remove-item', {
          method: 'DELETE',
          headers: { 'Content-Type': 'application/json' },
          credentials: 'include',
          body: JSON.stringify({ cartItemId }),
        });
        const result = await response.json();

        if (response.ok) {
          // X√≥a h√†ng kh·ªèi b·∫£ng
          row.remove();

          // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng tr√™n navbar
          const cartLink = document.querySelector('a[href="/cart"]');
          if (cartLink) {
            const currentCount = parseInt(cartLink.textContent.match(/\d+/)?.[0] || 0);
            const quantityRemoved = parseInt(row.querySelector('span').textContent);
            cartLink.textContent = `üõí (${currentCount - quantityRemoved})`;
          }

          // Ki·ªÉm tra n·∫øu kh√¥ng c√≤n s·∫£n ph·∫©m trong gi·ªè h√†ng
          const remainingItems = document.querySelectorAll('#cart-items table tbody tr');
          if (remainingItems.length === 0) {
            document.querySelector('#cart-items').innerHTML = '<p>Gi·ªè h√†ng tr·ªëng</p>';
          }

          alert('S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c x√≥a kh·ªèi gi·ªè h√†ng');
        } else {
          alert(result.message || 'L·ªói khi x√≥a s·∫£n ph·∫©m');
        }
      } catch (error) {
        console.error('Error removing item:', error);
        alert('ƒê√£ c√≥ l·ªói x·∫£y ra: ' + error.message);
      }
    }